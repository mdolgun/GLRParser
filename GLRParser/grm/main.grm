%auto_dict true
%include numbers.grm
%include time_adv.grm

%ifdef PARSE_DICT
	%macro V V',Vs',Ving',Ved',Ven'
	%macro N NSing,NPlur
	%macro NHead NHeadSing,NHeadPlur
	%macro NC NCSing,NCPlur
	%macro NCHead NCHeadSing,NCHeadPlur
	%macro Adj Adj,AdjComp,AdjSup
	%include_form V "MWALD_verb.txt"
	%include_form N "MWALD_noun.txt"
	%include_form NC "MWALD_noun.txt"
	%include_form NHead "MWALD_noun.txt"
	%include_form NCHead "MWALD_noun.txt"
	%include_form Adj "MWALD_adj.txt"
	%include noun.out
	%include adj.out
	%include adv.out
	%include verb.out
%else
	%ifdef LOAD_DICT
		%load_dict main.dict
	%else
		%include vp_inc.grm
	%endif
%endif

S -> AdvCl() SentNorm          : AdvCl() SentNorm            [-gap]
S -> AdvStart SentNorm AdvCl() : AdvStart AdvCl() SentNorm   [-gap]
S -> AdvStart SentNorm         : AdvStart SentNorm     	     [-gap]
S -> SentInv                   : SentInv                     [+quest,-gap]
S -> WhCase() SentInv          : SentInv                     [+gap,gapw=*WhCase]
S -> RelAdv SentInv            : SentInv                     [-gap,reladv=*RelAdv]
S -> AdvStart SentImp          : AdvStart SentImp            [-gap]
S -> NP'                       : NP'


S -> so AuxBePos Subj        : Subj "- dA" öyle  [+pron]
S -> so AuxHavePos Subj      : Subj "- dA" öyle  [+pron]
S -> so AuxDoPos Subj        : Subj "- dA" öyle  [+pron]
S -> so ModalPos Subj        : Subj "- dA" öyle  [+pron]
S -> neither AuxBePos Subj   : Subj "- dA" değil [+pron]
S -> neither AuxHavePos Subj : Subj "- dA" değil [+pron]
S -> neither AuxDoPos Subj   : Subj "- dA" değil [+pron]
S -> neither ModalPos Subj   : Subj "- dA" değil [+pron]

AdvCl -> as if SentNorm         : sanki SentNorm gibi   [conn=mis,-gap]
AdvCl -> if SentNorm Then       : SentNorm              [conn=if,-gap]
AdvCl -> while SentNorm         : SentNorm              [conn=ken,-gap,+pron]
AdvCl -> as SentNorm            : SentNorm              [conn=ken,-gap,+pron]
AdvCl -> once SentNorm          : SentNorm -DA          [conn=dik,-gap]
AdvCl -> when SentNorm          : SentNorm -DA          [conn=dik,-gap]
AdvCl -> by the time SentNorm   : SentNorm -DA          [conn=dik,-gap]
AdvCl -> now that SentNorm      : şimdi SentNorm için   [conn=dik,-gap]
AdvCl -> provided that SentNorm : SentNorm koşuluyla    [conn=me,-gap]
AdvCl -> because SentNorm       : SentNorm için         [conn=dik,-gap]
AdvCl -> as long as SentNorm    : SentNorm sürece       [conn=dik,-gap]
AdvCl -> as soon as SentNorm    : SentNorm              [conn=ir_mez,-gap,+pron]
AdvCl -> until SentNorm         : SentNorm +e kadar     [conn=en,-gap,+pron]

AdvCl -> after SentNorm         : SentNorm +den sonra   [conn=me,-gap]
AdvCl -> before SentNorm        : SentNorm +den önce    [conn=me,-gap]
AdvCl -> unless SentNorm        : SentNorm -çA          [conn=medik,-gap,+pron]
AdvCl -> though SentNorm        : SentNorm +e rağmen    [conn=me,-gap]
AdvCl -> although SentNorm      : SentNorm +e rağmen    [conn=me,-gap]
AdvCl -> even though SentNorm   : SentNorm +e rağmen    [conn=me,-gap]
AdvCl -> as much as SentNorm    : SentNorm +e rağmen    [conn=me,-gap]
AdvCl -> much as SentNorm       : SentNorm +e rağmen    [conn=me,-gap]

AdvCl -> without BaseGerund(-gap) : BaseGerund() -mAdAn
AdvCl -> after BaseGerund(-gap) : BaseGerund() -DHktAn sonra
AdvCl -> before BaseGerund(-gap) : BaseGerund() -mAdAn önce
AdvCl -> while BaseGerund(-gap) : BaseGerund() +aor -ken
AdvCl -> when BaseGerund(-gap) : BaseGerund() +aor -ken
AdvCl -> by BaseGerund(-gap) : BaseGerund() -YArAk
AdvCl -> BaseGerund(-gap) : BaseGerund() -YArAk {100}

AdvCl -> ForObjInf(-gap) : ForObjInf için {100}
AdvCl -> Inf : Inf +mek için {100}
AdvCl -> in order ForObjInf(-gap) : ForObjInf için
AdvCl -> in order Inf : Inf +mek için 

AdvCl -> based on Obj : Obj +e dayanarak

Then -> then
Then ->

# affirmative 
SentNorm -> Subj VPNorm : Subj VPNorm

AuxBe -> AuxBePos Not
AuxBe -> AuxBeCont Not
AuxBe -> AuxBeNeg [+neg]
AuxHave -> AuxHavePos Not
AuxHave -> AuxHaveCont Not
AuxHave -> AuxHaveNeg [+neg]
Modal -> ModalPos Not
Modal -> ModalCont Not
Modal -> ModalNeg [+neg]

IntrPred -> AdjP Inf(gap)              : Inf(gapw) +mek AdjP                         [-gap]
IntrPred -> AdjP ForObjInf(gap)        : ForObjInf(gapw) AdjP                   [-gap]
IntrPred -> AdjP Ger(gap)              : Ger(gapw) +mek AdjP                         [-gap]
IntrPred -> AdjP that SentNorm(gap)    : SentNorm(conn=me,scase=+in) AdjP       [-gap]

SentNorm -> it AuxBe IntrPred          : IntrPred PredTense     [num=sing,per=3]
SentNorm -> it AuxHave been IntrPred   : IntrPred ol PerfTense' [num=sing,per=3]
SentNorm -> it Modal be IntrPred       : IntrPred ol ModalTense [num=sing,per=3]

SentNorm -> there AuxBe NP' PPS(-gap)        : PPS() NP' PredTense     [+exist,+pred,per=3]
SentNorm -> there AuxHave been NP' PPS(-gap) : PPS() NP' ol PerfTense' [+exist,+pred,per=3]
SentNorm -> there Modal be NP' PPS(-gap)     : PPS() NP' ol ModalTense [+exist,+pred,per=3]

SentInv -> AuxBePos it Not IntrPred        : IntrPred PredTense      [num=sing,per=3]
SentInv -> AuxBeNeg it IntrPred            : IntrPred PredTense      [num=sing,per=3,+neg]
SentInv -> AuxHavePos it Not been IntrPred : IntrPred ol PerfTense'  [num=sing,per=3]
SentInv -> AuxHaveNeg it been IntrPred     : IntrPred ol PerfTense'  [num=sing,per=3,+neg]
SentInv -> ModalPos it Not be IntrPred     : IntrPred ol ModalTense  [num=sing,per=3]
SentInv -> ModalNeg it be IntrPred         : IntrPred ol ModalTense  [num=sing,per=3,+neg]

SentInv -> AuxBePos there Not Obj PPS(-gap)        : PPS() Obj PredTense      [+exist,+pred,num=sing,per=3]
SentInv -> AuxBeNeg there Obj PPS(-gap)            : PPS() Obj PredTense      [+exist,+pred,num=sing,per=3,+neg]
SentInv -> AuxHavePos there Not been Obj PPS(-gap) : PPS() Obj PerfTense'     [+exist,+pred,num=sing,per=3]
SentInv -> AuxHaveNeg there been Obj PPS(-gap)     : PPS() Obj PerfTense'     [+exist,+pred,num=sing,per=3,+neg]
SentInv -> ModalPos there Not be Obj PPS(-gap)     : PPS() Obj ol ModalTense  [+exist,+pred,num=sing,per=3]
SentInv -> ModalNeg there be Obj PPS(-gap)         : PPS() Obj ol ModalTense  [+exist,+pred,num=sing,per=3,+neg]

VPNorm -> AuxBe AdvEnd StBe             : AdvEnd StBe
VPNorm -> AuxHave AdvEnd StHave         : AdvEnd StHave
VPNorm -> Modal AdvEnd StModal          : AdvEnd StModal
VPNorm -> AuxDoPos Not AdvEnd StDo      : AdvEnd StDo 
VPNorm -> AuxDoNeg AdvEnd StDo          : AdvEnd StDo               [+neg]
VPNorm -> AdvEnd Vs                     : AdvEnd Vs SimpTense'      [tense=pres,num=sing,per=3]
VPNorm -> AdvEnd V                      : AdvEnd V SimpTense'       [tense=pres,num=sing,per=1]
VPNorm -> AdvEnd V                      : AdvEnd V SimpTense'       [tense=pres,num=plur]
VPNorm -> AdvEnd Ved                    : AdvEnd Ved SimpTense'     [tense=past]
VPNorm -> used to V              : V +aor -dH Pers2
VPNorm -> would rather Not V     : V Neg -mAyH tercih eder Pers1

# question
SentInv -> AuxBePos Subj Not AdvEnd StBe      : Subj AdvEnd StBe 
SentInv -> AuxBeNeg Subj AdvEnd StBe          : Subj AdvEnd StBe    [+neg]
SentInv -> AuxHavePos Subj Not AdvEnd StHave  : Subj AdvEnd StHave 
SentInv -> AuxHaveNeg Subj AdvEnd StHave      : Subj AdvEnd StHave  [+neg]
SentInv -> AuxDoPos Subj Not AdvEnd StDo      : Subj AdvEnd StDo 
SentInv -> AuxDoNeg Subj AdvEnd StDo          : Subj AdvEnd StDo    [+neg]
SentInv -> ModalPos Subj Not AdvEnd StModal   : Subj AdvEnd StModal   
SentInv -> ModalNeg Subj AdvEnd StModal       : Subj AdvEnd StModal [+neg]
SentInv -> shall we Not V              : V Neg -YAlHm mH
SentInv -> would Subj rather Not V     : Subj Neg -mAyH mH tercih eder Pers1
#SentInv -> would Subj like to V        : Subj V -mAk ister mi Pers1
#SentInv -> would Subj like Obj'        : Subj Obj' Acc ister mi Pers1
SentInv -> did Subj use to V           : Subj V +aor miydi Pers1

# imperative
SentImp -> VBe              : VBe
SentImp -> don't VBe        : VBe -mA   [neg=1]
SentImp -> do Not VBe       : VBe Neg
SentImp -> let 's Not VBe   : VBe Neg -YAlHm
SentImp -> let us Not VBe   : VBe Neg -YAlHm

VBe -> V : V PredBe
VBe -> be Pred : Pred ol 
VBe -> be PredVerb : PredVerb
VBe -> be Vpass : Vpass

StBe    -> going to StModal       : StModal            [modal=will]
StBe    -> gonna StModal          : StModal            [modal=will]
StBe    -> Ving                   : Ving ProgTense'
StBe    -> being Pred             : Pred ProgTense' 
StBe    -> being Vpass            : Vpass ProgTense' 
StBe    -> Vpass                  : Vpass SimpTense'
StBe    -> Pred                   : Pred PredTense
StBe    -> XPred                  : XPred
StBe    -> PredVerb               : PredVerb SimpTense'
StBe    -> able to V              : V ModalTense       [modal=can]
StBe    -> able to be Pred        : Pred ol ModalTense  [modal=can]
StHave  -> Ven                    : Ven PerfTense'
StHave  -> been Ving              : Ving ProgTense'
StHave  -> been Pred              : Pred PerfTense'
StHave  -> been able to V         : V NegAbil PerfTense'
StHave  -> been able to be Pred   : Pred ol NegAbil PerfTense
StHave  -> been Vpass             : Vpass PerfTense'
StHave  -> better Not V           : V Neg -sA SubjPoss iyi olur Quest
StDo    -> V                      : V SimpTense'
StDo    -> use to V               : V PresSuf Quest -YDH Pers2 

BaseModal -> be Ving            : Ving -Vyor ol 
BaseModal -> be Pred            : Pred ol
BaseModal -> be PredVerb        : PredVerb
BaseModal -> be Vpass           : Vpass
BaseModal -> have Ven           : Ven -mHş ol
BaseModal -> have been Ving     : Ving -Vyor ol
BaseModal -> have been Pred     : Pred olmuş ol
BaseModal -> have been Vpass    : Vpass -mHş ol
BaseModal -> V                  : V PredBe

InfTense -> to be Ving            : Ving -Vyor        # seems to be sleeping       @ uyuyor görünüyor
InfTense -> to be Pred            : Pred              # seems to be happy          @ mutlu görünüyor
InfTense -> to be PredVerb        : PredVerb -Vyor    # seems to be afraid of it   @ ondan korkuyor görünüyor
InfTense -> to be Vpass           : Vpass -Vyor       # seems to be loved          @ seviliyor görünüyor
InfTense -> to have Ven           : Ven -mHş          # seems to have gone         @ gitmiş görünüyor
InfTense -> to have been Ving     : Ving -Vyor        # seems to have been crying  @ ağlıyor görünüyor
InfTense -> to have been Pred     : Pred olmuş        # seems to have been happy   @ mutlu olmuş görünüyor
InfTense -> to have been Vpass    : Vpass -mHş        # seems to have been loved   @ sevilmiş görünüyor
InfTense -> to V                  : V -Vyor [!pred]   # seems to feel tired        @ yorgun hissediyor görünüyor
InfTense -> to V                  : V       [?pred]   # seems to have a car        @ (arabası var|arabaya sahip) görünüyor

BaseGerund -> being Pred        : Pred ol
BaseGerund -> being PredVerb    : PredVerb
BaseGerund -> being Vpass       : Vpass
BaseGerund -> having Ven        : Ven -mHş ol
BaseGerund -> having been Ving  : Ving -Vyor ol
BaseGerund -> having been Pred  : Pred olmuş ol
BaseGerund -> having been Vpass : Vpass -mHş ol
BaseGerund -> Ving              : Ving PredBe

StModal -> BaseModal(-,pred)    : BaseModal ModalTense
StModal -> be able to V         : V NegAbil AbilTense Quest PresPast
StModal -> be able to be Pred   : Pred ol NegAbil AbilTense Quest PresPast
StModal -> like to V            : V -mAk iste PresTense   [modal=will,tense=past]
StModal -> like Obj'            : Obj' Acc iste PresTense [modal=will,tense=past]

NegAbil -> : -YAbil [!neg]
NegAbil -> : -YAmA  [?neg]

NegAbil' -> : -YAbilir [!neg]
NegAbil' -> : -YAmAz   [?neg]

ModalTense -> : Futr    [modal=will]
ModalTense -> : Abil    [modal=can]
ModalTense -> : Poss    [modal=may]
ModalTense -> : Necc    [modal=must]

Futr -> : Neg -YAcAk? Quest Pers1'             [!conn,tense=pres] 
Futr -> : PresSuf Quest -YDH Pers2'            [!conn,tense=past]
Futr -> : Neg -YAcAk?                          [conn=?en]
Futr -> : Neg -YAcAkmHş Pers1'                 [conn=?mis]
Futr -> : Neg -YAcAk? SubjPoss                 [conn=?dik]
Futr -> : Neg -YAcAksA Pers2'                  [conn=?if]
Futr -> : Neg -YAcAkken                        [conn=?ken]
Futr -> : -YAcAk olmadık?                      [conn=?medik]
Futr -> : Neg -YAcAk olma SubjPoss             [conn=?me]
Futr -> : +copy +aor +paste -mAz               [conn=?ir_mez] 
Futr -> : +copy -YHp +paste -mAYAcAk? SubjPoss [conn=?ip_medik]

Abil -> : ModalCan                             [!conn]
Abil -> : NegAbil' -sA Pers2'                  [conn=?if]
Abil -> : NegAbil -YAn                         [conn=?en]
Abil -> : NegAbil -irmiş Pers1'                [conn=?mis]
Abil -> : NegAbil -DHk? SubjPoss               [conn=?dik]
Abil -> : NegAbil' -ken            	           [conn=?ken]
Abil -> : -YAmAdHk?                            [conn=?medik]
Abil -> : NegAbil -mA SubjPoss                 [conn=?me]
Abil -> : +copy +aor +paste -mAz               [conn=?ir_mez] 
Abil -> : +copy -YHp +paste -YAmADHk? SubjPoss [conn=?ip_medik]

Poss -> : Neg -YAbilir Quest PresPast              [!conn] 
Poss -> : Neg -YAbilirse Pers2'                    [conn=?if]
Poss -> : Neg -YAbilen                             [conn=?en]
Poss -> : Neg -YAbilirmiş Pers1'                   [conn=?mis]
Poss -> : Neg -YAbilecek? SubjPoss                 [conn=?dik]
Poss -> : Neg -YAbilirken                          [conn=?ken]
Poss -> : -mAYAbildHk?                             [conn=?medik]
Poss -> : Neg -YAbilme                             [conn=?me]
Poss -> : +copy -YHp +paste -mAYAbilDHk? SubjPoss  [conn=?ip_medik]

Necc -> : Neg -mAlH Quest Pers1'               [!conn]
Necc -> : Neg -mAlHysA Pers2'                  [conn=?if]
Necc -> : Neg -mAk zorunda olan                [conn=?en]
Necc -> : Neg -mAk zorundaymış Pers1'          [conn=?mis]
Necc -> : Neg -mAk zorunda olduk? SubjPoss     [conn=?dik]
Necc -> : Neg -mAlHyken                        [conn=?ken]
Necc -> : Neg -mAk zorunda olmadık?            [conn=?medik]
Necc -> : Neg -mAk zorunda olma SubjPoss       [conn=?me]
Necc -> : -mAk zorunda olup olmadık? SubjPoss  [conn=?ip_medik]

ModalCan -> : -YAbilir Quest PresPast         [!neg]
ModalCan -> : -YAmA Pers3'                    [tense=pres,?neg,!quest]
ModalCan -> : -YAmAz mH Pers1'                [tense=pres,?neg,?quest]
ModalCan -> : -YAmAz Quest -YdH Pers2'        [tense=past,?neg]

AbilTense -> : -YAcAk?     [modal=will] # he will be able to
AbilTense -> : -mAlH       [modal=must] # he must be able to
AbilTense -> :             [modal=can]  # ?he can be able to
AbilTense -> :             [modal=may]  # ?he may be able to

PresPast -> : Pers1'      [tense=pres]
PresPast -> : -YDH Pers2' [tense=past]

SimpTense' -> : PredTense ! [?pred]
SimpTense' -> : Past ! [tense=?past]
SimpTense' -> : Prog ! [?vprog]
SimpTense' -> : Past ! [?vpast]
SimpTense' -> : Pres


PredBe -> :     [!pred]
PredBe -> : ol  [?pred]

ProgTense' -> : PredBe Prog

PerfTense' -> : PredBe PerfTense                          [!conn]
PerfTense' -> : PredBe Neg -mHş olan                      [conn=?en]
PerfTense' -> : PredBe Neg -mHş Pers1'                    [conn=?mis]
PerfTense' -> : PredBe Neg -mHş olduk? SubjPoss           [conn=?dik]
PerfTense' -> : PredBe Neg -DHysA Pers2'                  [conn=?if,tense=?pres]
PerfTense' -> : PredBe Neg -mHş olsaydı Pers2'            [conn=?if,tense=?past]
PerfTense' -> : PredBe Neg -mHşken                        [conn=?ken]
PerfTense' -> : PredBe Neg -mHş olmadık?                  [conn=?medik]
PerfTense' -> : PredBe Neg -mHş olma SubjPoss             [conn=?me]
PerfTense' -> : PredBe +copy -YHp +paste -mADHk? SubjPoss [conn=?ip_medik,tense=?pres]
PerfTense' -> : PredBe -mHş olup olmadık? SubjPoss        [conn=?ip_medik,tense=?past]

Pres -> : PresTense                          [!conn]
Pres -> : PresSuf -sA Pers2'                 [conn=?if]
Pres -> : Neg -YAn                           [conn=?en]
Pres -> : PresSuf -mHş Pers1'                [conn=?mis]
Pres -> : Neg -DHk? SubjPoss                 [conn=?dik]
Pres -> : PresSuf -ken                       [conn=?ken]
Pres -> : -mAdHk                             [conn=?medik]
Pres -> : Neg -mA SubjPoss                   [conn=?me]
Pres -> : +copy +aor +paste -mAz             [conn=?ir_mez] 
Pres -> : +copy -YHp +paste -mADHk? SubjPoss [conn=?ip_medik]

Past -> : PastTense                          [!conn]
Past -> : Neg -sAyDH Pers2'                  [conn=?if]
Past -> : Neg -YAn                           [conn=?en]
Past -> : Neg -mHş Pers1'                    [conn=?mis]
Past -> : Neg -DHk? SubjPoss                 [conn=?dik]
Past -> : PresSuf -ken                       [conn=?ken]
Past -> : -mAdHk                             [conn=?medik]
Past -> : Neg -mA SubjPoss                   [conn=?me]
Past -> : +copy +aor +paste -mAz             [conn=?ir_mez] 
Past -> : +copy -YHp +paste -mADHk? SubjPoss [conn=?ip_medik]

Prog -> : Neg -Vyor Quest PresPast           [!conn]
Prog -> : Neg -Vyorsa Pers2'                 [conn=?if,tense=?pres]
Prog -> : Neg -Vyor olsaydı Pers2'           [conn=?if,tense=?past]
Prog -> : Neg -YAn                           [conn=?en]
Prog -> : Neg -Vyormuş Pers1'                [conn=?mis]
Prog -> : Neg -DHk? SubjPoss                 [conn=?dik]
Prog -> : Neg -Vyorken                       [conn=?ken]
Prog -> : Neg -Vyor olmadık?                 [conn=?medik]
Prog -> : Neg -mA SubjPoss                   [conn=?me]
Prog -> : +copy -YHp +paste -mADHk? SubjPoss [conn=?ip_medik]

PresTense -> : +aor Quest Pers1'          [!neg]
PresTense -> : -mA Pers3'                 [?neg,!quest]
PresTense -> : -mAz mH Pers1'             [?neg,?quest]

PresSuf -> : +aor [!neg]
PresSuf -> : -mAz [?neg]

PastTense -> : Neg -DH Pers2' Quest

PerfTense -> : Neg -DH Pers2' Quest       [tense=pres]
PerfTense -> : Neg -mHş Quest -YDH Pers2' [tense=past]

Neg -> : -mA [?neg]
Neg -> :     [!neg]

Quest -> : "- mH" [?quest]
Quest -> :        [!quest]

Pred -> Pred'             : Pred'
Pred -> Obj'              : Obj'               [+pred,case=+0]
Pred -> AG PPS            : PPS AG           [+pred]
Pred ->                   : *reladv            [+pred,-gap]
Pred -> PP PPS            : PP PPS             [+pred]
Pred -> AdvAdjComp AdjComp than Obj' : Obj' daha AdvAdjComp AdjComp [+pred,case=+den,-gap]
Pred -> AdjComp than Obj' : Obj' daha AdjComp  [+pred,case=+den,-gap]
#Pred -> as Adj as Obj     : Obj kadar Adj     [+pred,-gap,case=+in_pro]
#Pred -> so Adj as Obj     : Obj kadar Adj     [+pred,-gap,case=+in_pro]
XPred -> so Adj that SentNorm(gap)   : o kadar Adj PredTense ki SentNorm(gapw)  [+pred,-gap] ###!!!check for other tenses

NegPred -> : değil  [!exist,?neg]
NegPred -> :        [!exist,!neg]
NegPred -> : yok    [?exist,?neg]
NegPred -> : var    [?exist,!neg]

PredTense -> : NegPred Quest PresPast [!conn]
PredTense -> : ol Neg -YAn            [conn=?en]
PredTense -> : -mHş Pers1'            [conn=?mis]
PredTense -> : ol Neg -DHk? SubjPoss  [conn=?dik]
PredTense -> : NegPred -YsA Pers2'    [conn=?if,tense=?pres]
PredTense -> : olsaydı Pers2'         [conn=?if,tense=?past]
PredTense -> : -ken                   [conn=?ken]
PredTense -> : olmadık?               [conn=?medik]
PredTense -> : ol Neg -mA SubjPoss    [conn=?me]
PredTense -> : olup olmadık? SubjPoss [conn=?ip_medik]
PredTense -> : olur olmaz             [conn=?ir_mez]

Obj -> NP'(num=*onum,def,neg) : NP'() ObjCase   [oper=3]
Obj -> ObjPron   :                   [+def,case=?+in]
Obj -> ObjPron   :                   [+def,!case]
Obj -> ObjPron   : ObjPron ObjCase   [+def,case=!+in]

PPObj -> NP'(num=*onum,def) : NP'() ObjCase   [oper=3]
PPObj -> ObjPron : ObjPron

Subj -> NP'      : NP' SubjCase De [per=3]
Subj -> SubjPron : Pron' De

De -> : "- dA"  [?also]
De -> :         [!also]

Cok -> : çok [?much]
Cok -> :     [!much]

Pron' -> : Pron SubjCase ! [?pron]
Pron' -> : Pron SubjCase ! [scase=!+in]
Pron' -> : Pron SubjCase ! [scase=?+in,per=?3]
Pron' -> : Pron SubjCase ! [?pred,per=?3]
Pron' -> :  

ObjCase -> :       [!case]
ObjCase -> : *case [?case] 

SubjCase -> :        [!scase]
SubjCase -> : *scase [?scase] 

RObj -> NP'(num=*onum,def,neg) : NP'() *case [oper=3]

Objs -> NP'(num=*onum) 's : NP'() [oper=3]
Objs -> PossPron(pper=*oper,pnum=*onum) : Pron

ObjObj -> Obj-1(neg) Obj-2(neg) : Obj-1(case=*case1) Obj-2(case=*case2)     [-gap]
ObjObj -> Obj-1(neg)            : Obj-1(case=*case1) GapW(gapw,case=*case2) [+gap]

Obj1 -> Obj(neg) : Obj(case=*case1)       [-gap,-gap1]
Obj1 -> Obj(neg) : Obj(case=*case1)       [+gap,+gap1]
Obj1 ->          : GapW(gapw,case=*case1) [+gap,-gap1]

Obj2 -> Obj(neg) : Obj(case=*case2)       [-gap1]
Obj2 ->          : GapW(gapw,case=*case2) [+gap1]

Obj' -> Obj(onum,oper,neg)   : Obj(case)       [-gap]
Obj' ->                      : GapW(gapw,case) [+gap]

GapW -> :        [!gapw]
GapW -> : *gapw  [?gapw]

ObjInf -> Obj(oper,onum,neg) Inf(gap)   : Obj(case) Inf(gapw) -mA ObjPoss 
ObjInf -> Inf(-gap)                     : GapW(gapw,case) Inf() -mA ObjPoss(oper=3,onum=sing) [+gap]

ObjInfDik -> Obj(oper,onum,neg) Inf(gap)   : Obj(case) Inf(gapw) -DHk? ObjPoss 
ObjInfDik -> Inf(-gap)                     : GapW(gapw,case) Inf() -DHk? ObjPoss(oper=3,onum=sing) [+gap]

ObjBInf -> Obj(oper,onum,neg) BInf(gap) : Obj(case) BInf(gapw) -mA ObjPoss # they helped me do it
ThatBInf -> That Subj Should BInf(gap) : Subj BInf(gapw) -mA SubjPoss [scase=+in] # they demanded (that) he resign

Should -> should
Should ->

ObjGer -> Obj(oper,onum,neg) Ger(gap)   : Obj(case) Ger(gapw) -mA ObjPoss 
ObjGer -> Ger(-gap)                     : GapW(gapw,case) Ger() -mA ObjPoss(oper=3,onum=sing) [+gap]

ObjGerKen -> Obj(oper,onum,neg) Ger(gap)   : Obj(case) Ger(gapw) +aor -ken
ObjGerKen -> Ger(-gap)                     : GapW(gapw,case) Ger() +aor -ken [+gap]

ObjThat -> Obj(oper,onum,neg) SThat'(gap) : Obj(case) SThat'(gapw)
ObjThat -> SThat'(-gap) : SThat'() [+gap]

ObjIf -> Obj(oper,onum,neg) SWhether'(gap) : Obj(case) SWhether'(gapw)
ObjIf -> SWhether'(-gap) : SWhether'() [+gap]

ObjWh -> Obj(oper,onum,neg) Wh(gap) : Obj(case) Wh(gapw)
ObjWh -> Wh(-gap) : Wh() [+gap]

PassInf -> to Not BaseModal(gap) : BaseModal(gapw) -mA SubjPoss

InfDik ->  Not to BaseModal(gap) : BaseModal(gapw) Neg -DHk? SubjPoss

Inf  -> Not to BaseModal : BaseModal Neg
BInf -> Not BaseModal    : BaseModal Neg
Ger  -> Not BaseGerund   : BaseGerund Neg

ForObjInf -> for Obj(oper,onum,neg) Not to BaseModal(-gap) : Obj(case=+in) BaseModal() Neg -mA ObjPoss

Not -> not  [+neg]
Not ->

That -> that
That ->

Which -> that
Which -> which
Which -> who
Which -> whom

OptWhich -> Which
OptWhich ->

SThatSubj -> VPNorm : VPNorm            [conn=en,-gap,per=3]
SThatObj  -> Subj VPNorm : Subj VPNorm  [conn=dik,+gap,scase=+in]

Whether -> if
Whether -> whether

SWhether' -> Whether SentNorm(gap) : SentNorm(gapw,conn=ip_medik,scase=+in)
SWhether' -> whether to V() : V() +copy -YHp +paste -mAdHk? SubjPoss

SThat' -> That SentNorm(gap) : SentNorm(gapw,conn=dik,scase=+in)
SThatMe' -> That SentNorm(gap) : SentNorm(gapw,conn=me,scase=+in)

Wh -> WhCase SentNorm(+gap) : SentNorm(gapw,conn=dik,scase=+in)  [gapw=*WhCase] # what he is reading
Wh -> what to V() : ne V(+gap) -mA SubjPoss gerektiğiN
Wh -> where to V() : nerede V() -mA SubjPoss gerektiğiN
Wh -> how to V() : nasıl V() -mA SubjPoss gerektiğiN
Wh -> why to V() : niçin V() -mA SubjPoss gerektiğiN 
Wh -> RelAdv SentNorm() : RelAdv SentNorm(conn=dik) # how he is reading a book

RelAdv -> how    : nasıl
RelAdv -> where  : nerede
RelAdv -> when   : ne zaman
RelAdv -> why    : niçin
RelAdv -> how many times : kaç kere
RelAdv -> how Adv : ne kadar Adv

WhCase -> WhP : WhP *case

WhP -> what : ney?
WhP -> which : hangisiN [+def]
WhP -> whom | who : kim [+def]
WhP -> which N : hangi N [+def]
WhP -> whose N : kimin N -ZHN [+def]
WhP -> how many NPlur : kaç NPlur
WhP -> how much NSing : ne kadar NSing
WhP -> how Adj : ne kadar Adj 
WhP -> how old : kaç yaşında
WhP -> what N : ne N

NP -> NP-1() and NP-2() : NP-1() ve NP-2()  [num=plur,per=3]
NP -> NP-1() or NP-2() : NP-1() veya NP-2() [num=plur,per=3]
NP -> both NP-1() and NP-2() : hem NP-1() hem de NP-2() [num=plur,per=3]
NP -> either NP-1() or NP-2() : ya NP-1() ya da NP-2() [num=plur,per=3]
NP -> neither NP-1() nor NP-2() : ne NP-1() ne de NP-2() [num=plur,per=3,+neg]
NP -> NP1 : NP1 # the door of house
NP -> NP1 of NP(-nodef) : NP() +in_nopro NP1 [+ng] # the door of house of the house of doors : kapılar evinin ev kapısı
NP -> NP1 PP() : PP(+np) NP1
NP -> NP1 of ObjPron(per=*pper,num=*pnum) : ObjPron() +in_nopro NP1 # a big house of me : büyük bir evim
NP -> the NThat that SentNorm(-gap) : SentNorm(conn=dik,scase=+in) NThat +poss3 # the fact that he is alive
NP -> Det NInf Inf() : Det Inf() -mA NInf NGSuf # the/his attempt to mend the car 
NP -> the NGer of Ger : Ger() -mA NGer +poss3 # the convention of delivering a concession speech
#NP -> DG OfNG Inf() : Inf() -mAk için DG OfNG
#NP -> DG OfNG SentNorm(-gap) : SentNorm(conn=dik,scase=+in) +e dair DG OfNG
#NP -> Pron1 : Pron1 [+def]

NThat -> fact : gerçek?
NThat -> possibility : olasılık?
NThat -> idea : fik@ir
NThat -> day : gün
NThat -> insistence : ısrar

NInf -> attempt : girişim
NInf -> opportunity : fırsat
NInf -> call : çağrı
NInf -> insistence : ısrar

NGer -> convention : gelenek
NGer -> act : eylem
NGer -> insistence : ısrar

PropN -> U : U {100}
PropN -> PropN U : PropN U
Title -> mr | mister : bay
Title -> mrs : bayan
Title -> ms | miss : bayan
Title -> sir : sör
Title -> president : başkan
Title -> vice president : başkan yardımcısı
Title -> senator : senatör
Title -> representative : temsilci
Title -> governor : vali
Title -> congressman : kongre üyesi
Title -> prof | professor : profesör
Title -> judge | justice : yargıç
Title -> dr | doctor : doktor
Title -> NP1: NP1
Title -> AG : AG # ruthless Putin

NP1 -> OfUnit() OfNG : OfUnit() OfNG
NP1 -> DG OfNG : DG OfNG
NP1 -> half NP(-nodef) : NP() +in_nopro yarısı
NP1 -> DetPron : DetPron NGSuf [+ng,+def]
NP1 -> Pron2 : Pron2 [num=sing]
NP1 -> Pron2 else : başka Pron2
NP1 -> Pron2 AdjP : AdjP Pron2
NP1 -> Title PropN : Title PropN -' {10} [+def,num=sing]

One -> one
One ->

Ones -> ones
Ones ->

Pron1 -> this One        : buN		   [num=sing]
Pron1 -> that One        : oN          [num=sing]
Pron1 -> these Ones      : bunlar      [num=plur]
Pron1 -> those Ones      : onlar       [num=plur]
Pron1 -> the AdjP One    : AdjP olan
Pron1 -> the AdjP ones   : AdjP olanlar

Pron2 -> something  : bir şey
Pron2 -> someone    : biriN        [+def]
Pron2 -> somebody   : biriN        [+def]
Pron2 -> nothing    : hiç bir şey  [+neg]
Pron2 -> no one     : hiç kimse    [+neg,+def]
Pron2 -> nobody     : hiç kimse    [+neg,+def]
Pron2 -> anything   : herhangi bir şey 
Pron2 -> anybody    : herhangi bir kimse    [+def]
Pron2 -> anyone     : herhangi bir kimse    [+def]
Pron2 -> everything : her şey      [+def]
Pron2 -> everyone   : herkes       [+def]
Pron2 -> everybody  : herkes       [+def]

DetPron -> the other : diğeriN
DetPron -> the others | others : diğerleriN
DetPron -> another : bir başkasıN
DetPron -> all   : hep 
DetPron -> both  : her iki 
DetPron -> each | either : her bir 
DetPron -> none | neither : hiç bir  [+neg]
DetPron -> most | the most : çok? 
DetPron -> more | the more: daha çok? 
DetPron -> half : yarı 
DetPron -> twice | double : iki kat 
DetPron -> CardinalNumber times : CardinalNumber kat 
DetPron -> any   : herhangi bir 
DetPron -> some : bir kıs@ım 
DetPron -> many | several : birçok? 
DetPron -> a few : biraz 
DetPron -> few | the few: çok az 
DetPron -> The CardinalNumber               : CardinalNumber  # (the) two
DetPron -> The OrdinalNumber CardinalNumber : OrdinalNumber -HncH CardinalNumber # (the) first two
DetPron -> The OrdinalNumber                : OrdinalNumber -HncH # (the) first
DetPron -> The CardinalNumber OrdinalNumber : OrdinalNumber +de CardinalNumber # one third, two fifths !!!Currently plural suffix not supported!!!
DetPron -> last | the last : sonuncu 
DetPron -> first | the first : ilk
DetPron -> enough : yeteri kadar

The -> the
The ->

OfUnit -> DG AG Unit of : DG AG Bir Unit

OfNG -> AG NG : AG Bir NG NGSuf
OfNG -> AG NG of OfNG() : AG Bir OfNG() NG NGSuf [+ng]

NG -> N : N
NG -> NHead : NHead
NG -> N() NG : N() NG [+ng] # suicide note : intihar notu
NG -> NMod NG : NMod NG [+ng] # suicidal note : intihar notu
NG -> PropN NG : PropN NG [+ng] # Arizona Governor

Bir -> : ! [!indef]
Bir -> : ! [?noa]
Bir -> : bir  

NGSuf -> :         ! [-pnum,-ng] # house : ev()
NGSuf -> : +poss3  ! [-pnum]     # house door : ev kapı(sı)
NGSuf -> : PossSuf               # my house door : ev kapı(m)

# Pre-Determiners
PreDet -> all             : bütün
PreDet -> both            : her iki  [+noplur]
PreDet -> twice | double  : iki kat
PreDet -> CardinalNumber() times : CardinalNumber() kat  # beş kat
#PreDet -> one-third       : üçte bir

PreDet1 -> such            : böyle
PreDet1 -> quite           : oldukça

DG -> PreDet Det PostDets     : PreDet Det PostDets     [+def]
DG -> Det PostDets            : Det PostDets            [+def]
DG -> PreDet PostDets         : PreDet PostDets
DG -> PostDet PostDets        : PostDet PostDets
DG ->                         : {100} [+nodef] 
DG -> a | an                  : [+indef,num=sing]
DG -> PreDet1                 : PreDet1 [+nodef] 
DG -> PreDet1 a | PreDet1 an  : PreDet1 [+indef,num=sing]
DG -> another                 : bir başka [num=sing]
DG -> half a | half an        : yarım  [+indef,+noa,num=sing]
DG -> a OrdinalNumber         : OrdinalNumber [+indef,num=sing] # a second car
DG -> Quant                   : Quant   # a lot of money,books
DG -> QuantU                  : QuantU [num=sing] # a great deal of water
DG -> QuantC                  : QuantC [num=plur,+noplur] # a great number of people

PostDets -> PostDet PostDets : PostDet PostDets
PostDets -> 

# main (central) determiners
Det -> the
Det -> this              : bu        [num=sing]
Det -> these             : bu        [num=plur]
Det -> that              : o         [num=sing]
Det -> those             : o         [num=plur]
Det -> PossPron          : PossPron
Det -> NP() 's           : NP() -NHn     [+ng]
Det -> NP() '            : NP() -NHn     [+ng]

# post determiners
PostDet -> each              : her bir
PostDet -> most              : çoğu [num=plur,+noplur]
PostDet -> most              : en fazla [num=sing]
PostDet -> more              : daha çok [+noplur]
PostDet -> every             : her
PostDet -> either            : her bir
PostDet -> neither           : hiç bir   [+neg]
PostDet -> no                : hiç       [+noplur,+neg]
PostDet -> any               : Any
PostDet -> some              : biraz     [num=sing]
PostDet -> some              : bazı      [num=plur]
PostDet -> few | little      : az [+noplur]
PostDet -> a few             : birkaç [num=plur,+noplur]
PostDet -> a few             : biraz  [num=sing]
PostDet -> a little          : biraz  [+noplur]

Any -> : herhangi bir ! [!neg,!quest]
Any -> : hiç   

PostDet -> many | several : birçok  [num=plur,+noplur]
PostDet -> much           : çok     [num=sing]
PostDet -> CardinalNumber : CardinalNumber [+noplur]
PostDet -> CardComp than CardinalNumber : CardinalNumber +den CardComp [+noplur]
PostDet -> PreCardDegree CardinalNumber : PreCardDegree CardinalNumber [+noplur]
PostDet -> PostCardDegree CardinalNumber : CardinalNumber PostCardDegree [+noplur]
PostDet -> OrdinalNumber  : OrdinalNumber -HncH
PostDet -> QuantN : QuantN [num=plur,+noplur]

CardComp -> more : fazla 
CardComp -> much more :çok daha fazla
CardComp -> less : az
CardComp -> much less : çok daha az
PreCardDegree -> roughly | approximately | nearly : yaklaşık
PreCardDegree -> almost : hemen hemen
PostCardDegree -> as much as | around | about : kadar
PostCardDegree -> at most : en fazla
PostCardDegree -> at least : en az


NP' -> NP                       : NP
NP' -> NP OptWhich SThatObj()   : SThatObj() NP             # the book i am reading
NP' -> NP Which SThatSubj(num)  : SThatSubj() NP            # the man who is reading the book
NP' -> NP Ving(-gap)            : Ving() -YAn NP     {100}  # the man reading the book
NP' -> NP Vpass(-gap)           : Vpass() -An NP     {100}  # the man killed in the war
NP' -> NP Pred'(-gap)           : Pred'() olan NP    {100}  # the men used to the work
NP' -> NP PredVerb(-gap)        : PredVerb() -YAn NP {100}  # the men afraid of ghosts
NP' -> Pron1                    : Pron1 [+def]


Acc -> : +i [?def]
Acc -> :    [!def]

NHead -> NHeadSing  : NHeadSing         [num=sing]
NHead -> NHeadPlur  : NHeadPlur Plur    [num=plur]
NHead -> NCHeadSing : NCHeadSing        [num=sing,+ng]
NHead -> NCHeadPlur : NCHeadPlur Plur   [num=plur,+ng]
N -> NSing  : NSing         [num=sing]
N -> NPlur  : NPlur Plur    [num=plur]
N -> NCSing : NCSing        [num=sing,+ng]
N -> NCPlur : NCPlur Plur   [num=plur,+ng]

Plur -> : -lAr ! [num=?plur,!noplur]
Plur ->

AG ->
AG -> AdjP AG : AdjP AG
AG -> AdjP and AG : AdjP ve AG
AG -> AdjP or AG : AdjP veya AG
AG -> either AdjP or AG : ya AdjP ya da AG
AG -> neither AdjP nor AG : ne AdjP ne de AG

AdvAdj -> very : çok
AdvAdj -> too : fazla
AdvAdj -> too much : çok fazla
AdvAdj -> enough : yeteri kadar

AdvAdjComp -> much | too much : çok

AdjP -> Adj : Adj
AdjP -> AdjComp : daha AdjComp
AdjP -> AdjSup : en AdjSup
AdjP -> AdvAdj Adj : AdvAdj Adj
AdjP -> AdvAdjComp AdjComp : AdvAdjComp daha AdjComp

AdjComp -> less Adj : daha az Adj
AdjSup -> least Adj : en az Adj

Ones -> PossPron(pper=*per,pnum=*num)

Oneself -> myself                     [per=1,num=sing]
Oneself -> himself | herself | itself [per=3,num=sing]
Oneself -> ourselves                  [per=1,num=plur]
Oneself -> yourself | yourselves      [per=2,num=plur]
Oneself -> themselves                 [per=3,num=plur]

ObjPron -> me             : ben   [oper=1,onum=sing]
ObjPron -> him | her | it : oN    [oper=3,onum=sing]
ObjPron -> us             : biz   [oper=1,onum=plur]
ObjPron -> you            : siz   [oper=2,onum=plur]
ObjPron -> them           : onlar [oper=3,onum=plur]

SubjPron -> i             : ben   [per=1,num=sing]
SubjPron -> he | she      : oN    [per=3,num=sing]
SubjPron -> it            : oN    [per=3,num=sing]
SubjPron -> we            : biz   [per=1,num=plur]
SubjPron -> you           : siz   [per=2,num=plur]
SubjPron -> they          : onlar [per=3,num=plur]


Pron -> : onlar ! [per=?3,num=?plur]
Pron -> : oN    ! [per=?3,num=?sing]
Pron -> : siz   ! [per=?2]
Pron -> : biz   ! [per=?1,num=?plur]
Pron -> : ben   ! [per=?1,num=?sing]


#PossPron -> my              : ben   [pper=1,pnum=sing]
#PossPron -> his | her | its : oN    [pper=3,pnum=sing]
#PossPron -> our             : biz   [pper=1,pnum=plur]
#PossPron -> your            : siz   [pper=2,pnum=plur]
#PossPron -> their           : onlar [pper=3,pnum=plur]

PossPron -> my                  [pnum=sing,pper=1]
PossPron -> his                 [pnum=sing,pper=3]
PossPron -> her                 [pnum=sing,pper=3]
PossPron -> its                 [pnum=sing,pper=3]
PossPron -> our                 [pnum=plur,pper=1]
PossPron -> your                [pnum=plur,pper=2]
PossPron -> their : onların     [pnum=sing,pper=3]

ObjPoss -> : -Hm             [oper=1,onum=sing]
ObjPoss -> : -HmHz           [oper=1,onum=plur]
ObjPoss -> : -HnHz           [oper=2,onum=plur]
ObjPoss -> : -ZHN            [oper=3,onum=sing]
ObjPoss -> : -lArHN          [oper=3,onum=plur]
#ObjPoss -> : -ZHN            [oper=3]

SubjPoss -> : -Hm             [per=1,num=sing]
SubjPoss -> : -HmHz           [per=1,num=plur]
SubjPoss -> : -HnHz           [per=2,num=plur]
SubjPoss -> : -ZHN            [per=3,num=sing]
SubjPoss -> : -lArHN          [per=3,num=plur]
#SubjPoss -> : -ZHN            [per=3]

PossSuf -> : -Hm    [pnum=sing,pper=1]
PossSuf -> : -HmHz  [pnum=plur,pper=1]
PossSuf -> : -HnHz  [pnum=plur,pper=2]
PossSuf -> : +poss3 [pper=3]

AuxBePos   -> am      [tense=pres,num=sing,per=1]
AuxBePos   -> is      [tense=pres,num=sing,per=3]
AuxBePos   -> are     [tense=pres,num=plur]
AuxBePos   -> was     [tense=past,num=sing,per=1]
AuxBePos   -> was     [tense=past,num=sing,per=3]
AuxBePos   -> were    [tense=past,num=plur]
AuxBeCont  -> 'm      [tense=pres,per=1,num=sing]
AuxBeCont  -> 's      [tense=pres,per=3,num=sing]
AuxBeCont  -> 're     [tense=pres,num=plur]
AuxBeNeg   -> isn't   [tense=pres,per=3,num=sing]
AuxBeNeg   -> aren't  [tense=pres,num=plur]
AuxBeNeg   -> wasn't  [tense=past,num=sing,per=1]
AuxBeNeg   -> wasn't  [tense=past,num=sing,per=3]
AuxBeNeg   -> weren't [tense=past,num=plur]
AuxHavePos -> have    [tense=pres,num=sing,per=1]
AuxHavePos -> has     [tense=pres,num=sing,per=3]
AuxHavePos -> have    [tense=pres,num=plur]
AuxHavePos -> had     [tense=past]
AuxHaveCont -> 've    [tense=pres,num=sing,per=1]
AuxHaveCont -> 's     [tense=pres,num=sing,per=3]
AuxHaveCont -> 've    [tense=pres,num=plur]
AuxHaveCont -> 'd     [tense=past]
AuxHaveNeg -> haven't [tense=pres,num=sing,per=1]
AuxHaveNeg -> haven't [tense=pres,num=plur]
AuxHaveNeg -> hasn't  [tense=pres,num=sing,per=3]
AuxHaveNeg -> hadn't  [tense=past]
AuxDoPos   -> do      [tense=pres,num=sing,per=1]
AuxDoPos   -> do      [tense=pres,num=plur]
AuxDoPos   -> does    [tense=pres,num=sing,per=3]
AuxDoPos   -> did     [tense=past]
AuxDoNeg   -> don't   [tense=pres,num=sing,per=1]
AuxDoNeg   -> don't   [tense=pres,num=plur]
AuxDoNeg   -> doesn't [tense=pres,num=sing,per=3]
AuxDoNeg   -> didn't  [tense=past]
ModalPos -> can       [modal=can,tense=pres]
ModalPos -> could     [modal=can,tense=past]
ModalPos -> will      [modal=will,tense=pres]
ModalPos -> shall     [modal=will,tense=pres]
ModalPos -> would     [modal=will,tense=past]
ModalPos -> must      [modal=must,tense=pres]
ModalPos -> may       [modal=may,tense=pres]
ModalPos -> might     [modal=may,tense=past]
ModalPos -> should    [modal=must,tense=pres]
ModalCont -> 'll      [modal=will,tense=pres]
ModalCont -> 'd       [modal=will,tense=past]
ModalNeg -> can't     [modal=can,tense=pres]
ModalNeg -> cannot    [modal=can,tense=pres]
ModalNeg -> couldn't  [modal=can,tense=past]
ModalNeg -> won't     [modal=will,tense=pres]
ModalNeg -> wouldn't  [modal=will,tense=past]
ModalNeg -> shan't    [modal=will,tense=pres]
ModalNeg -> mustn't   [modal=must,tense=pres]
ModalNeg -> mayn't    [modal=may,tense=pres]
ModalNeg -> mightn't  [modal=may,tense=past]
ModalNeg -> shouldn't [modal=must,tense=pres]


Pers1' -> :     ! [?scase]
Pers1' -> :     ! [?pred,per=?3]
Pers1' -> : Pers1


Pers2' -> :     ! [?scase]
Pers2' -> :     ! [?pred,per=?3]
Pers2' -> : Pers2

Pers3' -> : -z   ! [?scase]
Pers3' -> : -z   ! [?pred,per=?3]
Pers3' -> : Pers3

Pers1 -> : -YHm     [num=sing,per=1]
Pers1 -> : -sHn     [num=sing,per=2]
Pers1 -> :          [num=sing,per=3]
Pers1 -> : -YHz     [num=plur,per=1]
Pers1 -> : -sHnHz   [num=plur,per=2]
Pers1 -> : -lAr     [num=plur,per=3]

Pers2 -> : -m       [num=sing,per=1]
Pers2 -> : -n       [num=sing,per=2]
Pers2 -> :          [num=sing,per=3]
Pers2 -> : -k       [num=plur,per=1]
Pers2 -> : -nHz     [num=plur,per=2]
Pers2 -> : -lAr     [num=plur,per=3]

Pers3 -> : -m       [num=sing,per=1]
Pers3 -> : -zSHn    [num=sing,per=2]
Pers3 -> : -z       [num=sing,per=3]
Pers3 -> : -yHz     [num=plur,per=1]
Pers3 -> : -zsHnHz  [num=plur,per=2]
Pers3 -> : -zlAr    [num=plur,per=3]

V -> AdvMid V'(+,+gap) Particle PPS(-gap) AdvEnd : PPS() AdvMid AdvEnd Particle V'                  [+gap]
V -> AdvMid V'(+,-gap) Particle PPS(+gap) AdvEnd : PPS(gapw) AdvMid AdvEnd Particle V'              [+gap]
V -> AdvMid V'(+,-gap) Particle PPS(-gap) AdvEnd : PPS() TRelAdv AdvMid AdvEnd Particle V'          [-gap]

V -> V-1 and V-2 : V-1 ve V-2
V -> V-1 or V-2 : V-1 veya V-2

Vs -> AdvMid Vs'(+,+gap) Particle PPS(-gap) AdvEnd : PPS() AdvMid AdvEnd Particle Vs'               [+gap]
Vs -> AdvMid Vs'(+,-gap) Particle PPS(+gap) AdvEnd : PPS(gapw) AdvMid AdvEnd Particle Vs'           [+gap]
Vs -> AdvMid Vs'(+,-gap) Particle PPS(-gap) AdvEnd : PPS() TRelAdv AdvMid  AdvEnd Particle Vs'       [-gap]

Vs -> Vs-1 and Vs-2 : Vs-1 ve Vs-2
Vs -> Vs-1 or Vs-2 : Vs-1 veya Vs-2

Ving -> AdvMid Ving'(+,+gap) Particle PPS(-gap) AdvEnd : PPS() AdvMid AdvEnd Particle Ving'         [+gap]
Ving -> AdvMid Ving'(+,-gap) Particle PPS(+gap) AdvEnd : PPS(gapw) AdvMid AdvEnd Particle Ving'     [+gap]
Ving -> AdvMid Ving'(+,-gap) Particle PPS(-gap) AdvEnd : PPS() TRelAdv AdvMid AdvEnd Particle Ving' [-gap]

Ving -> Ving-1 and Ving-2 : Ving-1 ve Ving-2
Ving -> Ving-1 or Ving-2 : Ving-1 veya Ving-2

Ved -> AdvMid Ved'(+,+gap) Particle PPS(-gap) AdvEnd : PPS() AdvMid AdvEnd Particle Ved'            [+gap]
Ved -> AdvMid Ved'(+,-gap) Particle PPS(+gap) AdvEnd : PPS(gapw) AdvMid AdvEnd Particle Ved'        [+gap]
Ved -> AdvMid Ved'(+,-gap) Particle PPS(-gap) AdvEnd : PPS() TRelAdv AdvMid AdvEnd Particle Ved'    [-gap]

Ved -> Ved-1 and Ved-2 : Ved-1 ve Ved-2
Ved -> Ved-1 or Ved-2 : Ved-1 veya Ved-2

Ven -> AdvMid Ven'(+,+gap) Particle PPS(-gap) AdvEnd : PPS() AdvMid AdvEnd Particle Ven'            [+gap]
Ven -> AdvMid Ven'(+,-gap) Particle PPS(+gap) AdvEnd : PPS(gapw) AdvMid AdvEnd Particle Ven'        [+gap]
Ven -> AdvMid Ven'(+,-gap) Particle PPS(-gap) AdvEnd : PPS() TRelAdv AdvMid AdvEnd Particle Ven'    [-gap]

Ven -> Ven-1 and Ven-2 : Ven-1 ve Ven-2
Ven -> Ven-1 or Ven-2 : Ven-1 veya Ven-2

Vpass -> AdvMid Vpass'(+,+gap) Particle By() PPS(-gap) AdvEnd : PPS() By() AdvMid AdvEnd Particle Vpass'         [+gap]
Vpass -> AdvMid Vpass'(+,-gap) Particle By() PPS(+gap) AdvEnd : PPS(gapw) By() AdvMid AdvEnd Particle Vpass'     [+gap]
Vpass -> AdvMid Vpass'(+,-gap) Particle By() PPS(-gap) AdvEnd : PPS() By() TRelAdv AdvMid AdvEnd Particle Vpass' [-gap]

Vpass -> Vpass-1 and Vpass-2 : Vpass-1 ve Vpass-2
Vpass -> Vpass-1 or Vpass-2 : Vpass-1 veya Vpass-2

By -> by PPObj : PPObj taraf ObjPoss -dAn
By ->

TRelAdv -> : *reladv [?reladv]
TRelAdv -> :         [!reladv]

AdvStart -> AdvP AdvStart : AdvP AdvStart
AdvStart -> PP AdvStart : PP AdvStart
AdvStart ->

AdvEnd -> AdvEnd Adv     : AdvEnd Adv
AdvEnd -> AdvEnd too     : AdvEnd    [+also,+pron]
AdvEnd -> AdvEnd as well : AdvEnd    [+also,+pron]
AdvEnd ->

AdvMid -> AdvMid Adv : AdvMid Adv
AdvMid ->

AdvP -> Adv        : Adv # slowly, fast
AdvP -> AdvComp    : daha AdvComp # more slowly, faster
AdvP -> AdvSup     : en AdvSup # most slowly, fastest
AdvP -> AdvAdj Adv : AdvAdj Adv # very slowly, pretty fast
AdvP -> AdvAdjComp AdvComp : AdvAdjComp daha AdvComp # much slowly, too much fast

Adv -> on WeekDay     : WeekDay günü
Adv -> on WeekDayPlur : WeekDayPlur günleri
Adv -> on Month       : Month ayında
Adv -> on Month CardinalNumber : CardinalNumber Month +de # on January 2
Adv -> on Month OrdinalNumber : OrdinalNumber Month +de # on January 2nd
Adv -> on Month CardinalNumber-1 CardinalNumber-2 : CardinalNumber-1 Month CardinalNumber-2 -' +de # on January 2, 1968
Adv -> on Month OrdinalNumber CardinalNumber : OrdinalNumber Month CardinalNumber -' +de # on January 2nd, 1968
Adv -> at CardinalNumber o 'clock : saat CardinalNumber -' +de # at 5 o'clock

DGTime -> DG Time : DG Time

Adv -> DGTime() ago : DGTime() önce
Adv -> DGTime() later : DGTime() sonra
Adv -> for DGTime() : DGTime() boyunca

Adv -> TimePrefix WeekDay : TimePrefix WeekDay # next/this/every etc. monday
Adv -> TimePrefix Month   : TimePrefix Month   # next/this/every etc. january
Adv -> TimePrefix Time    : TimePrefix Time    # next/this/every etc. time, hour, week, morning, summer etc.
Adv -> TimePrefix CardinalNumber Time : TimePrefix CardinalNumber Time [+noplur] # every four years
Adv -> early WeekDay : WeekDay erken saatlerde
Adv -> late WeekDay : WeekDay geç saatlerde
Adv -> early Month : Month başı
Adv -> late Month : Month sonu
Adv -> early morning : sabah erken
Adv -> late night : gece geç
Adv -> late summer : yaz sonu
Adv -> early summer : yaz başı
Adv -> late fall : sonbahar sonu
Adv -> early fall : sonbahar başı
Adv -> late winter : kış sonu
Adv -> early winter : kış başı
Adv -> late spring : ilkbahar sonu
Adv -> early spring : ilkbahar başı

PP -> Prep PPObj : PPObj Prep {100}
PP -> as Pred : Pred olarak {100}
PP -> as Adj as PPObj : PPObj +in_pro kadar Adj
PP -> for Ger : Ger -mAk için

PPS -> PP() PPS : PP() PPS
PPS -> PPGap() PPS(-gap) : PPGap() PPS(gapw)
PPS -> [-gap]

Prep -> about                   : +in_pro3 hak+ ObjPoss -dA Ki
Prep -> above | over            : +in_nopro üst ObjPoss -dA Ki
Prep -> according to            : +e göre Olan
Prep -> across | opposite       : +in_nopro karşı ObjPoss -dA Ki
Prep -> after | following       : +den sonra Ki
Prep -> against                 : +e karşı
Prep -> along | throughout      : boyunca Olan
Prep -> alongside | beside | by | next to : +in_nopro yan ObjPoss -dA Ki 
Prep -> among | amongst | between | amid | amidst : +in_nopro ara ObjPoss -dA Ki
Prep -> around                  : +in_nopro etraf ObjPoss -dA Ki
#Prep -> as                      : olarak
Prep -> at | in | on            : +de Ki
Prep -> because of              : +den dolayı Olan
Prep -> before                  : +den önce Ki
Prep -> beneath | below | under | underneath : +in_nopro alt ObjPoss -dA Ki
Prep -> beyond                  : +in_nopro öte ObjPoss -dA Ki
Prep -> behind                  : +in_nopro arka ObjPoss -dA Ki
Prep -> despite | notwithstanding : +e rağmen
Prep -> down | downward | downwards : +den aşağı
Prep -> during                  : sırasında
Prep -> due to                  : +in_pro yüz ObjPoss -dAn Olan
Prep -> except | except for | save | saving | barring : +in_pro hariç? ObjPoss -dA
Prep -> for                     : +in_pro için 
Prep -> from within             : +in_nopro iç ObjPoss -dAn
Prep -> from | through | off    : +den
Prep -> inside | within         : +in_nopro iç ObjPoss -dA Ki
Prep -> into                    : +in_nopro iç ObjPoss -YA Olan
Prep -> in front of             : +in_nopro ön ObjPoss -dA Ki
Prep -> in spite of             : +e rağmen
Prep -> in the thick of         : +in_nopro orta ObjPoss -dA Ki
Prep -> in the middle of        : +in_nopro orta ObjPoss -dA Ki
Prep -> instead of              : yerine
Prep -> like                    : +in_pro gibi
Prep -> amid | midst            : +in_nopro orta ObjPoss -dA Ki
Prep -> on behalf of            : +in_pro ad ObjPoss +e Olan
Prep -> onto                    : +in_nopro üst ObjPoss -YA Olan
Prep -> outside | out of        : +in_nopro dış ObjPoss -dA Ki
Prep -> regarding               : +le ilgili
Prep -> regardless of           : +den bağımsız olarak
Prep -> since                   : +den beri
Prep -> to                      : +e
Prep -> toward | towards        : +e doğru
Prep -> through                 : boyunca
Prep -> till | until            : +e kadar
Prep -> until after             : +den sonraya kadar
Prep -> up | upward | upwards   : +den yukarı
Prep -> upon | atop             : +in_nopro üst ObjPoss -dA Ki
Prep -> unlike                  : +in_nopro aksine
Prep -> via                     : +in_pro üzerinden
Prep -> within                  : +in_pro iç ObjPoss -dA Ki
Prep -> with                    : PrepWith
Prep -> without                 : +siz [+noa]
Prep -> per                     : +dA

Particle -> in | inside | within        : içeri      {100}
Particle -> out | outside | away | off  : dışarı     {100}
Particle -> up | upward | upwards       : yukarı     {100}
Particle -> down | downward | downwards : aşağı      {100}
Particle -> on | over | above           : üzerine    {100}
Particle -> around | about              : etrafa     {100}
Particle -> back | backward | backwards : geri       {100}
Particle -> beyond | behind             : arkaya     {100}
Particle -> forward | forwards          : ileri      {100}
Particle -> below | under | beneath     : altına     {100}
Particle -> through | along             : boyunca    {100}
Particle -> by | past                   : yanına     {100}
Particle -> across | opposite           : karşıya    {100}
Particle ->


PPGap -> at | in | on | for | to | from
PPGap -> about                          : hakkında
PPGap -> above | over                   : üstünde
PPGap -> across | against | opposite    : karşı
PPGap -> among | between                : arasında
PPGap -> around                         : etrafında
PPGap -> beneath | below | under        : altında
PPGap -> inside | within                : içinde
PPGap -> like                           : benzer
PPGap -> with                           : birlikte
PPGap -> without                        : olmadan

Ki -> : -ki [?np]
Ki -> :     [!np]

Olan -> : olan [?np]
Olan -> :      [!np]

PrepWith -> : +li  [?np]
PrepWith -> : +le  [!np]

%suffix +0 -
%suffix +i -YH
%suffix +e -YA
%suffix ben+e bana
%suffix +de -DA
%suffix +den -DAn
%suffix +siz -sHz
%suffix +li -lH

%suffix +poss3 -ZHN
%suffix hep+poss3 hepsi

%suffix +mek -mAk?
%suffix +mek+i -mAyH
%suffix +mek+e -mAyA

%suffix +in -NHn
%suffix ben+in benim
%suffix biz+in bizim

# with me: benimle, with him: onunla, with them: onlarla with the book: kitapla
%suffix +le -YlA
%suffix ben+le benimle
%suffix sen+le seninle
%suffix oN+le onunla
%suffix biz+le bizimle
%suffix siz+le sizinle
%suffix buN+le bununla

# for me: benim için, for him: onun için, for them: onlar için, for the book: kitap için
%suffix +in_pro -
%suffix ben+in_pro benim
%suffix sen+in_pro senin 
%suffix oN+in_pro onun
%suffix biz+in_pro bizim
%suffix siz+in_pro sizin 
%suffix onlar+in_pro onlar
%suffix buN+in_pro bunun
%suffix bunlar+in_pro bunlar

# about me: hakkımda, about him: onun hakkında, about them: onlar hakkında, about the book: kitap hakkında
%suffix +in_pro3 -
%suffix ben+in_pro3 -
%suffix sen+in_pro3 - 
%suffix oN+in_pro3 onun
%suffix biz+in_pro3 -
%suffix siz+in_pro3 - 
%suffix onlar+in_pro3 onlar
%suffix buN+in_pro3 bunun
%suffix bunlar+in_pro3 bunlar

# under me: altımda, under him: onun altında, under them: onların altında, under the book: kitabın altında
%suffix +in_nopro -NHn
%suffix ben+in_nopro -
%suffix sen+in_nopro -
%suffix biz+in_nopro -
%suffix siz+in_nopro -

%suffix +sin -NHn
%suffix ben+sin -
%suffix biz+sin -
%suffix siz+sin -

%suffix +aor -Hr
%suffix +caus -DHr

%suffix +yormuş -Vyor

#%major S,SentNorm,SentInv,SentImp,V,Vs,Ving,Ved,Ven,Obj,AdjP,NP,Adv